/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.ubc.gpec.ia.analyzer.gui;

import ca.ubc.gpec.ia.analyzer.model.IAO;
import ca.ubc.gpec.ia.analyzer.model.ImageDescriptor;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.io.IOException;
import java.net.URISyntaxException;
import java.util.TreeSet;
import javax.swing.JFrame;

/**
 *
 * @author samuelc
 */
public class MultiImageSelectJPanel extends javax.swing.JPanel {

    private TreeSet<SingleImageSelectJPanel> singleImageSelectJPanels;

    /**
     * Creates new form MultiImageSelectJPanel
     */
    public MultiImageSelectJPanel() {
        initComponents();
        singleImageSelectJPanels = new TreeSet<SingleImageSelectJPanel>();
    }

    /**
     * add singleImageSelectJPanel to the treeSet
     *
     * @param singleImageSelectJPanel
     */
    public void addSingleImageSelectJPanel(SingleImageSelectJPanel singleImageSelectJPanel) {
        singleImageSelectJPanels.add(singleImageSelectJPanel);
    }

    /**
     * add IAO
     * @param iao
     * @throws IOException 
     */
    public void addIAO(IAO iao) throws IOException, URISyntaxException {
        SingleImageSelectJPanel singleImageSelectJPanel = new SingleImageSelectJPanel();
        singleImageSelectJPanel.setIAO(iao);
        singleImageSelectJPanels.add(singleImageSelectJPanel);
    }
    
    /**
     * clear all IAOs i.e. clear all singleImageSelectJPanels
     */
    public void clearIAOs() {
        singleImageSelectJPanels.clear();
        this.removeAll();
    }
    
    /**
     * return the list of select IAO(s)
     * @return 
     */
    public TreeSet<IAO> getSelectedIAOs() {
        TreeSet<IAO> result = new TreeSet<IAO>();
        for (SingleImageSelectJPanel singleImageSelectJPanel:singleImageSelectJPanels) {
            if (singleImageSelectJPanel.isSelected()) {
                result.add(singleImageSelectJPanel.getIAO());
            }
        }
        return result;
    }
    
    /**
     * Draws the component.
     *
     * @param g Where to draw to.
     */
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        int n = singleImageSelectJPanels.size();
        if (n > 0) {
            // figure out the number of singleImageSelectJPanel to show per row
            int numPerRow = Math.max(1,(int) Math.floor(this.getPreferredSize().getWidth() / singleImageSelectJPanels.first().getPreferredSize().getWidth()));
            //this.setLayout(new GridLayout(Math.max(1,(int) Math.ceil(n / numPerRow)), numPerRow));
            this.setLayout(new FlowLayout(FlowLayout.LEFT));
            for (SingleImageSelectJPanel s : singleImageSelectJPanels) {
                this.add(s);
            }
        }
    }

    /**
     * main method for process testing
     *
     * @param args
     */
    public static void main(String[] args) {
        JFrame.setDefaultLookAndFeelDecorated(true);
        JFrame frame = new JFrame();
        frame.setTitle("testing SingleImageSelectJPanel ...");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        MultiImageSelectJPanel multiImageSelectJPanel = new MultiImageSelectJPanel();

        IAO iao1 = new IAO();
        IAO iao2 = new IAO();
        IAO iao3 = new IAO();
        IAO iao4 = new IAO();
        iao1.addImageDescriptor(new ImageDescriptor("file:/C:/Users/samuelc/Documents/GPEC/imagej/test ground/02-008_Her2-SP3_E12_v3_s10_062_r6c11.jpg"));
        iao2.addImageDescriptor(new ImageDescriptor("file:/C:/Users/samuelc/Documents/GPEC/imagej/test ground/02-008_Her2-SP3_J12_v3_s10_013_r2c12.jpg"));
        iao3.addImageDescriptor(new ImageDescriptor("file:/C:/Users/samuelc/Documents/GPEC/imagej/test ground/02-008_Ki67-Neo_D12_v2_s10_077_r7c5.jpg"));
        iao4.addImageDescriptor(new ImageDescriptor("file:/C:/Users/samuelc/Documents/GPEC/imagej/test ground/11744_extract.jpg"));
        try {
            multiImageSelectJPanel.addIAO(iao1);
            multiImageSelectJPanel.addIAO(iao2);
            multiImageSelectJPanel.addIAO(iao3);
            multiImageSelectJPanel.addIAO(iao4);
        } catch (Exception e) {
            System.err.println(e);
        }

        frame.add(multiImageSelectJPanel);

        frame.pack();
        frame.setVisible(true);
        frame.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
